"""
openai api python simple demo
#pip3 install openai
"""


import openai

client = openai.Client(base_url="http://10.10.251.104:30001/v1", api_key="EMPTY")
# Chat completion
response = client.chat.completions.create(
    model="//root/.cache/huggingface/DeepSeek-r1",
    messages=[{"content": "In this environment you have access to a set of tools you can use to answer the user's question. You can use one tool per message, and will receive the result of that tool use in the user's response. You use tools step-by-step to accomplish a given task, with each tool use informed by the result of the previous tool use.\n\n## Tool Use Formatting\n\nTool use is formatted using XML-style tags. The tool name is enclosed in opening and closing tags, and each parameter is similarly enclosed within its own set of tags. Here's the structure:\n\n<tool_use>\n  <name>{tool_name}</name>\n  <arguments>{json_arguments}</arguments>\n</tool_use>\n\nThe tool name should be the exact name of the tool you are using, and the arguments should be a JSON object containing the parameters required by that tool. For example:\n<tool_use>\n  <name>python_interpreter</name>\n  <arguments>{\"code\": \"5 + 3 + 1294.678\"}</arguments>\n</tool_use>\n\nThe user will respond with the result of the tool use, which should be formatted as follows:\n\n<tool_use_result>\n  <name>{tool_name}</name>\n  <result>{result}</result>\n</tool_use_result>\n\nThe result should be a string, which can represent a file or any other output type. You can use this result as input for the next action.\nFor example, if the result of the tool use is an image file, you can use it in the next action like this:\n\n<tool_use>\n  <name>image_transformer</name>\n  <arguments>{\"image\": \"image_1.jpg\"}</arguments>\n</tool_use>\n\nAlways adhere to this format for the tool use to ensure proper parsing and execution.\n\n## Tool Use Examples\n\nHere are a few examples using notional tools:\n---\nUser: Generate an image of the oldest person in this document.\n\nAssistant: I can use the document_qa tool to find out who the oldest person is in the document.\n<tool_use>\n  <name>document_qa</name>\n  <arguments>{\"document\": \"document.pdf\", \"question\": \"Who is the oldest person mentioned?\"}</arguments>\n</tool_use>\n\nUser: <tool_use_result>\n  <name>document_qa</name>\n  <result>John Doe, a 55 year old lumberjack living in Newfoundland.</result>\n</tool_use_result>\n\nAssistant: I can use the image_generator tool to create a portrait of John Doe.\n<tool_use>\n  <name>image_generator</name>\n  <arguments>{\"prompt\": \"A portrait of John Doe, a 55-year-old man living in Canada.\"}</arguments>\n</tool_use>\n\nUser: <tool_use_result>\n  <name>image_generator</name>\n  <result>image.png</result>\n</tool_use_result>\n\nAssistant: the image is generated as image.png\n\n---\nUser: \"What is the result of the following operation: 5 + 3 + 1294.678?\"\n\nAssistant: I can use the python_interpreter tool to calculate the result of the operation.\n<tool_use>\n  <name>python_interpreter</name>\n  <arguments>{\"code\": \"5 + 3 + 1294.678\"}</arguments>\n</tool_use>\n\nUser: <tool_use_result>\n  <name>python_interpreter</name>\n  <result>1302.678</result>\n</tool_use_result>\n\nAssistant: The result of the operation is 1302.678.\n\n---\nUser: \"Which city has the highest population , Guangzhou or Shanghai?\"\n\nAssistant: I can use the search tool to find the population of Guangzhou.\n<tool_use>\n  <name>search</name>\n  <arguments>{\"query\": \"Population Guangzhou\"}</arguments>\n</tool_use>\n\nUser: <tool_use_result>\n  <name>search</name>\n  <result>Guangzhou has a population of 15 million inhabitants as of 2021.</result>\n</tool_use_result>\n\nAssistant: I can use the search tool to find the population of Shanghai.\n<tool_use>\n  <name>search</name>\n  <arguments>{\"query\": \"Population Shanghai\"}</arguments>\n</tool_use>\n\nUser: <tool_use_result>\n  <name>search</name>\n  <result>26 million (2019)</result>\n</tool_use_result>\nAssistant: The population of Shanghai is 26 million, while Guangzhou has a population of 15 million. Therefore, Shanghai has the highest population.\n\n\n## Tool Use Available Tools\nAbove example were using notional tools that might not exist for you. You only have access to these tools:\n<tools>\n\n<tool>\n  <name>fozz40F1sDX4WhlVR1AeR8</name>\n  <description>A powerful web search tool that provides comprehensive, real-time results using Tavily's AI search engine. Returns relevant web content with customizable parameters for result count, content type, and domain filtering. Ideal for gathering current information, news, and detailed web content analysis.</description>\n  <arguments>\n    {\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\",\"description\":\"Search query\"},\"search_depth\":{\"type\":\"string\",\"enum\":[\"basic\",\"advanced\"],\"description\":\"The depth of the search. It can be 'basic' or 'advanced'\",\"default\":\"basic\"},\"topic\":{\"type\":\"string\",\"enum\":[\"general\",\"news\"],\"description\":\"The category of the search. This will determine which of our agents will be used for the search\",\"default\":\"general\"},\"days\":{\"type\":\"number\",\"description\":\"The number of days back from the current date to include in the search results. This specifies the time frame of data to be retrieved. Please note that this feature is only available when using the 'news' search topic\",\"default\":3},\"time_range\":{\"type\":\"string\",\"description\":\"The time range back from the current date to include in the search results. This feature is available for both 'general' and 'news' search topics\",\"enum\":[\"day\",\"week\",\"month\",\"year\",\"d\",\"w\",\"m\",\"y\"]},\"max_results\":{\"type\":\"number\",\"description\":\"The maximum number of search results to return\",\"default\":10,\"minimum\":5,\"maximum\":20},\"include_images\":{\"type\":\"boolean\",\"description\":\"Include a list of query-related images in the response\",\"default\":false},\"include_image_descriptions\":{\"type\":\"boolean\",\"description\":\"Include a list of query-related images and their descriptions in the response\",\"default\":false},\"include_raw_content\":{\"type\":\"boolean\",\"description\":\"Include the cleaned and parsed HTML content of each search result\",\"default\":false},\"include_domains\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"A list of domains to specifically include in the search results, if the user asks to search on specific sites set this to the domain of the site\",\"default\":[]},\"exclude_domains\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of domains to specifically exclude, if the user asks to exclude a domain set this to the domain of the site\",\"default\":[]}},\"required\":[\"query\"]}\n  </arguments>\n</tool>\n\n\n<tool>\n  <name>fffXDxtSuQRT-ePRb4Fh6M</name>\n  <description>A powerful web content extraction tool that retrieves and processes raw content from specified URLs, ideal for data collection, content analysis, and research tasks.</description>\n  <arguments>\n    {\"type\":\"object\",\"properties\":{\"urls\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of URLs to extract content from\"},\"extract_depth\":{\"type\":\"string\",\"enum\":[\"basic\",\"advanced\"],\"description\":\"Depth of extraction - 'basic' or 'advanced', if usrls are linkedin use 'advanced' or if explicitly told to use advanced\",\"default\":\"basic\"},\"include_images\":{\"type\":\"boolean\",\"description\":\"Include a list of images extracted from the urls in the response\",\"default\":false}},\"required\":[\"urls\"]}\n  </arguments>\n</tool>\n\n</tools>\n\n## Tool Use Rules\nHere are the rules you should always follow to solve your task:\n1. Always use the right arguments for the tools. Never use variable names as the action arguments, use the value instead.\n2. Call a tool only when needed: do not call the search agent if you do not need information, try to solve the task yourself.\n3. If no tool call is needed, just answer the question directly.\n4. Never re-do a tool call that you previously did with the exact same parameters.\n5. For tool use, MARK SURE use XML tag format as shown in the examples above. Do not use any other format.\n\n# User Instructions\n\n\nNow Begin! If you solve the task correctly, you will receive a reward of $1,000,000.\n",
               "role": "system"},
              {"content": "哪吒2的票房是多少", "role": "user"}]
)
print(response)
